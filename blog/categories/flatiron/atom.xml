<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: Flatiron | Theory of Coding]]></title>
  <link href="http://minling.github.io/blog/categories/flatiron/atom.xml" rel="self"/>
  <link href="http://minling.github.io/"/>
  <updated>2015-09-07T13:57:21-04:00</updated>
  <id>http://minling.github.io/</id>
  <author>
    <name><![CDATA[MinLing Zhao]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Gon Gem]]></title>
    <link href="http://minling.github.io/blog/2015/07/29/gon-gem/"/>
    <updated>2015-07-29T00:58:10-04:00</updated>
    <id>http://minling.github.io/blog/2015/07/29/gon-gem</id>
    <content type="html"><![CDATA[<h2>Gon Gem</h2>

<p><img src="https://github.com/gazay/gon/raw/master/doc/logo_small.png" alt="gon" /></p>

<p>We&rsquo;ve started project mode this week and it&rsquo;s been pretty cool building our own apps without any tests to pass, and solve real world problems with our application. I&rsquo;ve learned a lot of new things and one of them new gems I learned to make my life easier is the <a href="https://github.com/gazay/gon">Gon Gem!</a></p>

<h3>Why Use Gon?</h3>

<p>Gon is a ruby gem that you can use to send some data to your javascript files without getting it from your views and parsing it. It&rsquo;s quick and easy and will save you a lot of time trying to connect the path from getting it to your javascript file. YOu can renew data in your variables through ajax with gon.watch, and it also supports Jbuilder, Rabl, and Rabl-Rails. You can learn more about Gon by click on the link above.</p>

<h3>How I encountered the problem</h3>

<p>While I was working on our project on using the foursquare API to find the BEST places to eat &ndash; not just random restaurants around you, but venues that people keep going back to, I encountered the problem of parsing jSON from the Geonames API. In my javascript file, I was trying to display the location of your city and zipcode, by using the longitude and latitude of your current location. But before I can even parse it, I have to put in my username for the API and since I didn&rsquo;t want hackers on github to hack my API key, I wanted to put it in the <a href="https://github.com/laserlemon/figaro">figaro</a> file, which loads its values to ENV and puts it in .gitignore. I wanted to access my API key from my ENV and put it to my javascript file, but it was really hard to.</p>

<h3>Initial efforts</h3>

<p>Maybe we can just pull the ENV into a variable! WRONG</p>

<pre><code class="javascript">var username = ENV['geonames_username']
</code></pre>

<p>Maybe we need to interpolate it, this is from a ruby file, afterall. I changed the searches.js file into searches.js.erb so I can write ruby in it. In my file, I tried to set the api key to a variable username. WRONG</p>

<pre><code class="javascript ">var username = &lt;%= ENV['geonames_username'] %&gt;
</code></pre>

<p>Then I tried to concatenate it into my API link to parse. WRONG</p>

<pre><code class="javascript ">var link = "http://api.geonames.org/findNearestAddressJSON?lat=" + latitude + "&amp;lng=" + longitude + "&amp;username=" + username
</code></pre>

<p>Apparently, that still gave me nothing. my var username was just an empty string, which resuilted in a bad API link.</p>

<p>Here is where the Gon Gem came in. One of our instructors, Sophie, recommended this gem, which made it much easier to access data to my javascript file, because I was not able to get data from the ENV. It was pretty simple to set up also.</p>

<h3>With the Gon Gem</h3>

<p>In your Gemfile, you will add the gem</p>

<pre><code class="javascript">gem 'gon'
</code></pre>

<p>Then you will bundle install to install the gem into your computer. If you haven&rsquo;t already, add the api key to your application.yml from your figaro gem, like you usually would for regular ruby. Make sure it is in single quotes &lsquo;&rsquo; and not double quotes &ldquo; &rdquo;, I made the mistake of using double quotes and it was not taken well when you ask for it in your model when you do ENV[&lsquo;api_key&rsquo;].</p>

<p>To access it in your javascript file, go to the controller where you are trying to use the api key on that page and define it so your js file can grab it from the controller.</p>

<pre><code class="ruby">def index
  @search = Search.new
  gon.username = ENV['geonames_username']
end
</code></pre>

<p>In your javascript file, you can set the variable username to gon.username</p>

<pre><code class="javascript ">var username = gon.username
</code></pre>

<p>Now this will work and you can continue parsing your data efficiently!</p>

<pre><code class="javascript">var link = "http://api.geonames.org/findNearestAddressJSON?lat=" + latitude + "&amp;lng=" + longitude + "&amp;username=" + username
</code></pre>

<p>The Gon gem has been useful to me. Although this was a relatively easy problem to fix, there are probably other harder and deeper problems you can use it with that is best suited for this gem. For more information the typical uses and what you can use it with, you can go here!
<a href="https://github.com/gazay/gon">Gon gem</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[My First Post on Octopress]]></title>
    <link href="http://minling.github.io/blog/2015/06/17/my-first-post-on-octopress/"/>
    <updated>2015-06-17T20:50:57-04:00</updated>
    <id>http://minling.github.io/blog/2015/06/17/my-first-post-on-octopress</id>
    <content type="html"><![CDATA[<h1>1. Introduction</h1>

<h1>2. .tap for Ruby</h1>

<p>  scroll to the end to read about .tap for Ruby</p>

<h2>Why am I at Flatiron?</h2>

<p>Hi there! My name is Minling and I just graduated with a bachelors in Biomolecular Sciences. Although I love biology and its cute little microorganisms, I was always into technology. More often times than not have I said &ldquo;wow wouldn&rsquo;t it be cool if I built this&hellip;&rdquo;, &ldquo;oh wait nevermind, I don&rsquo;t even know how to get code.&rdquo;</p>

<p><strong>Time is a limited resource, and if lost, it will never be found.</strong></p>

<p>With a finite number of heartbeats in a lifetime, and a finite amount of hours in a day, there is just absolutely no time to waste. People ponder for a long time whether they have taken that risk, but that is just too much time spent being indecisive.
<img src="http://brandchannel.com/wp-content/uploads/2013/07/Nike-JustDoIt-560.jpg" alt="Nike just do it" /></p>

<p>What if you just did it?</p>

<p>If you fail, it&rsquo;ll be a great lesson to learn, but if you don&rsquo;t, you win.</p>

<blockquote><p><strong>“Any chance not taken is an opportunity missed.”
― Ken Petti</strong></p></blockquote>

<p>Of course it is said easier than done. You can sit there all day looking at motivational quotes but until you make that first step, you aren&rsquo;t actually listening to any of it.</p>

<p>Some people have lateness issues but it isn&rsquo;t because they don&rsquo;t care enough to change, or respect other people&rsquo;s time. They may have other issues in their life that prevents them from realizing the importance of being on time. No matter how much they are told to be on time, they will never be on time, because they have&rsquo;t gotten to that realization yet. People can&rsquo;t be progammed to change, it is up to their own will.</p>

<p>There are people who are creators and others who just want to experience the creations. I want to be a creator of beautiful things. I want to build meaningful, memorable apps that would make someone&rsquo;s life easier or something cool that people would use. I want to make a dent in this world with my creations.</p>

<p>Sometimes when times get hard, I fall back to pondering whether I have made the right decision, because I made a drastic change in my life to learn to code. I could have stayed in biology and tried to go forward in my career, but I wouldn&rsquo;t be able to bring my crazy ideas to reality. I guess I&rsquo;ll never know until it all happens.</p>

<blockquote><p>“You can’t connect the dots looking forward; you can only connect them looking backwards. So you have to trust that the dots will somehow connect in your future. You have to trust in something — your gut, destiny, life, karma, whatever. This approach has never let me down, and it has made all the difference in my life.”</p>

<p>~ Steve Jobs</p></blockquote>

<h2>#tap dat &hellip;</h2>

<p>A few times I encountered the usage of #tap in Ruby.</p>

<blockquote><p>tap{|x|&hellip;} → obj</p>

<p>Yields self to the block, and then returns self. The primary purpose of this method is to “tap into” a method chain, in order to perform operations on intermediate results within the chain.</p></blockquote>

<p>Although that is the definition of the Ruby Doc, it isn&rsquo;t quite clear on how to use it, at least it wasn&rsquo;t clear to me.</p>

<p>Essentially, this is what .tap does
<code>ruby
class Object
  def tap
    yield self
    self
  end
end
</code></p>

<pre><code class="ruby ">def cats
  array = ['paws', 'furry', 'cute']
  array.reverse!
  array
end
#=&gt; ["cute", "furry", "paws"] 
</code></pre>

<p>Using .tap will achieve the same in one line.</p>

<p>You can use the object to do something, and then it wil return itself at the end.</p>

<pre><code class="ruby ">def cats
  ['paws', 'furry', 'cute'].tap(&amp;:reverse!)
end
#=&gt; ["cute", "furry", "paws"] 
</code></pre>

<p><img src="https://igcdn-photos-c-a.akamaihd.net/hphotos-ak-xaf1/t51.2885-15/11335852_1441788479455650_419649704_n.jpg" alt="cats" />
Kitty: &ldquo;Smells like a good method.&rdquo;</p>
]]></content>
  </entry>
  
</feed>
